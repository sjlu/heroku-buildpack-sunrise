#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
CWD=$(pwd)

# fail fast
set -e

# get the actual buildpack from git
# and compile from that instead.
rm -rf heroku-buildpack-sunrise # cleanup if failed
git clone --recursive https://github.com/sjlu/heroku-buildpack-sunrise.git --quiet

# Creating a cache_dir if it
# doesn't exist.
mkdir -p $CACHE_DIR/sunrise

# source some convenience functions
source ./heroku-buildpack-sunrise/refs/heroku-buildpack-nodejs/bin/common.sh

# we need to compile Node.js first because we are
# doing dependency pulldowns and we aren't really
# running the Node.js anyways.
./heroku-buildpack-sunrise/refs/heroku-buildpack-nodejs/bin/compile $BUILD_DIR $CACHE_DIR $ENV_DIR

# once npm is installed, we should see and detect
# if bower is installed
if [ -f "$BUILD_DIR/bower.json" ]; then
  status "Installing Bower components" 

  # change to the build directory
  pushd $BUILD_DIR > /dev/null

  # exporting path
  PATH=$PATH:$BUILD_DIR/vendor/node/bin

  # seeing if we have a cache
  # if not, reinstall
  if [ -d "$CACHE_DIR/sunrise/bower" ]; then
    status "Restoring Bower from cache"
    cp -r $CACHE_DIR/sunrise/bower $BUILD_DIR/node_modules/
    npm update bower 2>&1 | indent
  else
    npm install bower 2>&1 | indent
  fi

  # caching bower itself.
  status "Caching Bower install"
  cp -r $BUILD_DIR/node_modules/bower $CACHE_DIR/sunrise/

  # install any new bower components
  status "Cloning Bower components"
  $BUILD_DIR/node_modules/bower/bin/bower install | indent

  # changing out directory
  popd > /dev/null
fi

# cleanup the vendor directory and the unnecessary
# Procfile that the previous buildpack has created
rm -rf $BUILD_DIR/vendor
rm -rf $BUILD_DIR/Procfile
rm -rf $BUILD_DIR/node_modules

# compile PHP afterwards.
./heroku-buildpack-sunrise/refs/heroku-buildpack-php/bin/compile $BUILD_DIR $CACHE_DIR/php

# install composer and get deps.
if [ -f "$BUILD_DIR/www/composer.json" ]; then
  status "Installing dependencies using Composer"

  # change directory
  pushd $BUILD_DIR/www > /dev/null

  # set the path
  PATH=$PATH:$BUILD_DIR/php/bin/

  # downloading composer
  curl --silent --max-time 60 --location "http://getcomposer.org/composer.phar" > composer.phar

  # download deps
  LD_LIBRARY_PATH="$BUILD_DIR/vendor/mcrypt/lib/" php composer.phar install -n | indent

  # removing composer.phar
  rm composer.phar

  # change back
  popd > /dev/null
fi

ls -al $BUILD_DIR/apache/conf

# cleanup.
rm -rf heroku-buildpack-sunrise
